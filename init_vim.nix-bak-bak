{pkgs}:
{
  config = ''
    " Neovim Plugins https://github.com/neovim/neovim/wiki/Related-projects#plugins
    " vim-plug Plugin Manager - https://github.com/junegunn/vim-plug#usage
    " Specify a directory for plugins
    " - For Neovim: ~/.local/share/nvim/plugged
    " - For Vim: ~.vim/plugged
    " - Avoid using standard Vim directory names like 'plugin'
    " - Reload .vimrc and :PlugInstall to install plugins.
    " call plug#begin('~/.local/share/nvim/plugged')

    call plug#begin('/root/.config/nvim/autoload/plug.vim')

    " Make sure you use single quotes

    " deoplete
    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
    Plug 'tbodt/deoplete-tabnine', { 'do': './install.sh' }

    " enhancemets
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'
    Plug 'Chiel92/vim-autoformat'
    Plug 'jiangmiao/auto-pairs'


    " git
    Plug 'airblade/vim-gitgutter', {'type': 'opt'}

    " Haskell
    Plug 'neovimhaskell/haskell-vim'

    " python
    Plug 'nvie/vim-flake8'
    Plug 'mindriot101/vim-yapf'

    " Rust 
    Plug 'rust-lang/rust.vim'

    " HTML
    Plug 'tpope/vim-surround'

    " Javascript
    Plug 'maksimr/vim-jsbeautify'

    " Typescript
    Plug 'leafgarland/typescript-vim'

    " Nix Expressions
    Plug 'LnL7/vim-nix'

    " Ethereum Solidity
    Plug 'tomlion/vim-solidity'

    " Initialize plugin system
    call plug#end()

    " locate nix package installs
    let g:python3_host_prog="/nix/store/swy0p01xr0wyh907d67hkxr1g0kngcpn-python3-3.7.4/bin/python"
    let g:node_host_prog ="/nix/store/98fqirs1dkvm240kn72jj1s2ifd5xx3y-nodejs-10.16.3/bin/node"

    " NERDTree Settings
    autocmd vimenter * NERDTree
    " Toggle
    map <C-n> :NERDTreeToggle<CR>
    :imap <C-j> <Esc>
    " enable line numbers
    let NERDTreeShowLineNumbers=1

    " Autoformat Settings
    noremap <F3> :Autoformat<CR>

    " git Settings
    autocmd Filetype gitcommit setlocal spell textwidth=72

    " load providers
    let g:deoplete#enable_at_startup = 1
    let g:loaded_node_provider=1

    " Haskell

    " Typscript
    set ff=unix

    " Rust

    " indents files according to filetype
    filetype plugin indent on

    " enable syntax highlighting
    syntax enable

    " show line numbers
    set number

    " set tabs to have 4 spaces
    set ts=4

    " indent when moving to the next line while writing code
    set autoindent

    " expand tabs into spaces
    set expandtab

    " when using the >> or << commands, shift lines by 4 spaces
    set shiftwidth=4

    " show the matching part of the pair for [] {} and ()
    set showmatch

    " enable all Python syntax highlighting features
    let python_highlight_all=1

    " Enable JsBeautify
    autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
    autocmd FileType json noremap <buffer> <c-f> :call JsonBeautify()<cr>
    autocmd FileType jsx noremap <buffer> <c-f> :call JsxBeautify()<cr>
    autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
    autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>

    " Vim-Airline
    " List of themes here:
    " $HOME/.local/share/nvim/plugged/vim-airline-themes/doc/airline-themes.txt
    let g:airline#extensions#tabline#enabled=1
    let g:airline_theme='laederon' " 'papercolor'

    if !exists('g:airline_symbols')
      let g:airline_symbols={}
    endif
    let g:airline_symbols.space="\ua0"

    " unicode symbols
    let g:airline_left_sep='¬ª'
    let g:airline_left_sep='ÓÇ∞'
    let g:airline_right_sep='¬´'
    let g:airline_right_sep='ÓÇ≤'
    let g:airline_symbols.crypt='üîí'
    let g:airline_symbols.linenr='‚ò∞'
    let g:airline_symbols.linenr='‚êä'
    let g:airline_symbols.linenr='‚ê§'
    let g:airline_symbols.linenr='¬∂'
    let g:airline_symbols.maxlinenr=' '
    let g:airline_symbols.maxlinenr='„èë'
    let g:airline_symbols.branch='‚éá'
    let g:airline_symbols.paste='œÅ'
    let g:airline_symbols.paste='√û'
    let g:airline_symbols.paste='‚à•'
    let g:airline_symbols.spell='Íû®'
    let g:airline_symbols.notexists='‚àÑ'
    let g:airline_symbols.whitespace='Œû'

    " powerline symbols
    let g:airline_left_sep='ÓÇ∞'
    let g:airline_left_alt_sep='ÓÇ±'
    let g:airline_right_sep='ÓÇ≤'
    let g:airline_right_alt_sep='ÓÇ≥'
    let g:airline_symbols.branch='ÓÇ†'
    let g:airline_symbols.readonly='ÓÇ¢'
    let g:airline_symbols.linenr='‚ò∞'
    let g:airline_symbols.maxlinenr='ÓÇ°'

    " Set Spell
    :nmap <F8> :setlocal spell spelllang=en_us<CR>
    :nmap <F9> :set nospell<CR>
    :nmap <F7> :echo 'Hi Heath'<CR>

    " set Vertical Column color at 80 chars
    set colorcolumn=89

    " show a visual line under the cursor's current line
    highlight Cursor guifg=white guibg=black
    highlight iCursor guifg=white guibg=steelblue
    set guicursor=n-v-c:block-Cursor
    set guicursor+=i:ver100-iCursor
    set guicursor+=n-v-c:blinkon0
    set guicursor+=i:blinkwait10
    set cursorline
    :hi CursorLine   cterm=NONE ctermbg=25 guibg=darkblue ctermfg=4 guifg=white  
    :hi CursorColumn cterm=NONE ctermfg=4 ctermbg=25  guibg=darkblue guifg=white
    :nnoremap <Leader>c :set cursorline! cursorcolumn!<CR>

  '';
}
